import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONArray;import com.alibaba.fastjson.JSONObject;import org.apache.http.client.ClientProtocolException;import java.io.BufferedReader;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.HashMap;public class j {    public static void main(String[] args) {        long rt;        HashMap<Integer, String> versionmap = new HashMap<>();        try {            URL url = new URL("https://ghproxy.com/https://raw.githubusercontent.com/MhxjClub/public/main/api/version.json");            HttpURLConnection connection = (HttpURLConnection) url.openConnection();            connection.setUseCaches(true);            connection.setDoOutput(true);            BufferedReader br = new BufferedReader(new InputStreamReader(connection.getInputStream()));            String input;            StringBuilder builder = new StringBuilder();            while ((input = br.readLine()) != null) {                builder.append(input);            }            br.close();            JSONObject object = JSON.parseObject(builder.toString());            System.out.println("云端version.json获取成功:");            System.out.println("最后更新:" + object.getString("last-update"));            System.out.println("最后支持MC版本:" + object.getString("latest-mcversion"));            JSONArray array = object.getJSONArray("map");            rt = System.currentTimeMillis();            for (int i = 0; i < array.size(); i++) {                int finalI = i;                array.getJSONObject(i).keySet().forEach(s -> {                    if (array.getJSONObject(finalI).getString(String.valueOf(s)) != null) {                        versionmap.put(Integer.parseInt(s), array.getJSONObject(finalI).getString(String.valueOf(s)));                        System.out.println("[ViaVersionDaemon-Mapping] " + s + " -> " + array.getJSONObject(finalI).getString(String.valueOf(s)));                    }                });//                                for (int s = 0; s < object.getInteger("version"); s++) {//                                    if(array.getJSONObject(i).getString(String.valueOf(s))!=null){//                                        versionmap.put(s,array.getJSONObject(i).getString(String.valueOf(s)));//                                        System.out.println("[ViaVersionDaemon-Mapping] "+s+" -> "+array.getJSONObject(i).getString(String.valueOf(s)));//                                    }//                                }            }        } catch (ClientProtocolException e) {            throw new RuntimeException(e);        } catch (Exception e) {            throw new RuntimeException(e);        }        System.out.println(System.currentTimeMillis() - rt);    }}